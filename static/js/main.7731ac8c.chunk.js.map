{"version":3,"sources":["Header.js","Footer.js","Components/AddForm.js","Components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Footer","style","backgroundColor","color","width","paddingBottom","paddingTop","AddForm","submit","e","preventDefault","list","state","title","refs","txtTitle","value","description","txtDescription","counter","newList","push","index","setState","myForm","reset","edit","i","data","delete","splice","heading","this","labelCSS","inputCSS","marginTop","height","ref","htmlFor","name","onClick","scope","map","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAEe,SAASA,IAIpB,OACI,8BACI,sBAAKC,UAAU,wDAAf,UACI,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,kBACA,wBAAQD,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBAAtL,SACI,sBAAMP,UAAU,0BAGpB,qBAAKA,UAAU,2BAA2BQ,GAAG,yBAA7C,SACI,qBAAIR,UAAU,qBAAd,UACI,oBAAIA,UAAU,kBAAd,SACI,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,oBAEJ,oBAAID,UAAU,WAAd,SACI,mBAAGA,UAAU,WAAWC,KAAK,IAA7B,iCClBb,SAASQ,IAYpB,OACI,8BACI,qBAAKT,UAAU,kBAAkBU,MAZvB,CACdC,gBAAiB,QACjBC,MAAO,QACPC,MAAO,OACPC,cAAe,MACfC,WAAY,QAOR,SACI,mBAAGf,UAAU,cAAb,4C,gCCfKgB,E,kDAEjB,aAAe,IAAD,8BACV,gBAUJC,OAAS,SAACC,GAENA,EAAEC,iBACF,IAAIC,EAAO,EAAKC,MAAMD,KAClBE,EAAQ,EAAKC,KAAKC,SAASC,MAC3BC,EAAc,EAAKH,KAAKI,eAAeF,MAE3C,GAA0B,IAAvB,EAAKJ,MAAMO,QAAc,CAExB,IAAIC,EAAU,CACV,MAASP,EACT,YAAeI,GAEnBN,EAAKU,KAAKD,OAEV,CACA,IAAIE,EAAQ,EAAKV,MAAMU,MAEvBX,EAAKW,GAAOT,MAAQA,EACpBF,EAAKW,GAAOL,YAAcA,EAI9B,EAAKM,SAAS,CACVZ,KAAMA,EACNQ,QAAS,IAEb,EAAKL,KAAKU,OAAOC,SAtCP,EAyCdC,KAAO,SAACC,GACJ,IAAIC,EAAO,EAAKhB,MAAMD,KAAKgB,GAC3B,EAAKb,KAAKC,SAASC,MAAQY,EAAKf,MAChC,EAAKC,KAAKI,eAAeF,MAAQY,EAAKX,YAEtC,EAAKM,SAAS,CAEVJ,QAAS,EACTG,MAAOK,KAjDD,EAqDdE,OAAS,SAACF,GACN,IAAIhB,EAAO,EAAKC,MAAMD,KACtBA,EAAKmB,OAAOH,EAAG,GACf,EAAKJ,SAAS,CACVZ,KAAOA,KAvDX,EAAKC,MAAQ,CACTmB,QAAS,sBACTpB,KAAM,GACNQ,QAAS,EACTG,MAAO,IAND,E,0CA8Dd,WAAU,IAAD,OAEDX,EAAOqB,KAAKpB,MAAMD,KAKhBsB,EAAW,CACb9B,MAAO,SAEL+B,EAAW,CACb9B,MAAO,QAYX,OACI,sBAAKb,UAAU,YAAYU,MApBf,CACZkC,UAAW,SAmBX,UAEI,oBAAI5C,UAAU,mBAAd,SAAkCyC,KAAKpB,MAAMmB,UAC7C,qBAAKxC,UAAU,yCAAyCU,MAb/C,CACbG,MAAO,OACPgC,OAAQ,QAWJ,SAEI,uBAAMC,IAAI,SAAV,UAEI,sBAAK9C,UAAU,aAAf,UACI,uBAAO+C,QAAQ,QAAQrC,MAAOgC,EAA9B,mBACA,uBAAOxC,KAAK,OAAOF,UAAU,yBAAyBQ,GAAG,QAAQwC,KAAK,QAAQtC,MAAOiC,EAAUG,IAAI,gBAEvG,sBAAK9C,UAAU,aAAf,UACI,uBAAO+C,QAAQ,cAAcrC,MAAOgC,EAApC,yBACA,uBAAOxC,KAAK,OAAOF,UAAU,yBAAyBQ,GAAG,cAAcE,MAAOiC,EAAUK,KAAK,cAAcF,IAAI,sBAEnH,uBACA,wBAAQ5C,KAAK,SAASF,UAAU,yBAAyBU,MAAOiC,EAAUM,QAAS,SAAA/B,GAAC,OAAI,EAAKD,OAAOC,IAApG,2BAKR,oBAAIlB,UAAU,wBAAd,gCACA,qBAAKA,UAAU,iBAAf,SACI,wBAAOA,UAAU,kBAAjB,UACI,gCACI,+BAEI,oBAAIkD,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAMxC,MAlCtB,CACdG,MAAO,OAiCa,yBACA,oBAAIqC,MAAM,QACV,oBAAIA,MAAM,aAGlB,gCACK9B,EAAK+B,KAAI,SAACd,EAAMD,GAAP,OACN,+BACI,6BAAKC,EAAKf,QACV,6BAAKe,EAAKX,cACV,6BAAI,wBAAQ1B,UAAU,wBAAwBiD,QAAS,SAAAb,GAAC,OAAI,EAAKE,OAAOF,IAApE,sBACJ,6BAAI,wBAAQpC,UAAU,yBAAyBiD,QAAS,kBAAO,EAAKd,KAAKC,IAArE,sBAJCA,oB,GA3HJgB,aCAAA,YCetBC,MAXf,WAEE,OACE,gCACE,cAACtD,EAAD,IACA,cAAC,EAAD,IACA,cAACU,EAAD,QCAS6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7731ac8c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header() {\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\" >\r\n                <a className=\"navbar-brand\" href=\"#\">CRUD</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href=\"#\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">Contact</a>\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n\r\n    const footerStyle={\r\n        backgroundColor: \"black\",\r\n        color: \"white\",\r\n        width: \"100%\",\r\n        paddingBottom: \"5px\",\r\n        paddingTop: \"10px\"\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container-fluid\" style={footerStyle}>\r\n                <p className=\"text-center\">Copyright &copy; www.crud.in</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class AddForm extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            heading: \"My CRUD Application\",\r\n            list: [],\r\n            counter: 0,\r\n            index: ''\r\n        }\r\n\r\n    }\r\n\r\n    submit = (e)=> {\r\n\r\n        e.preventDefault();\r\n        let list = this.state.list;\r\n        let title = this.refs.txtTitle.value;\r\n        let description = this.refs.txtDescription.value;\r\n\r\n        if(this.state.counter === 0){\r\n            //new record\r\n            let newList = {\r\n                \"title\": title,\r\n                \"description\": description\r\n            }\r\n            list.push(newList);\r\n        }\r\n        else{\r\n            let index = this.state.index;\r\n            \r\n            list[index].title = title;\r\n            list[index].description = description;\r\n        }\r\n        \r\n        //reset the state of list data\r\n        this.setState({\r\n            list: list,\r\n            counter: 0\r\n        })\r\n        this.refs.myForm.reset();\r\n    }\r\n\r\n    edit = (i) => {\r\n        let data = this.state.list[i]; //it gives exact particular record which we are added\r\n        this.refs.txtTitle.value = data.title;\r\n        this.refs.txtDescription.value = data.description;\r\n        \r\n        this.setState({\r\n            \r\n            counter: 1,\r\n            index: i\r\n        })\r\n    }\r\n\r\n    delete = (i) =>{\r\n        let list = this.state.list;\r\n        list.splice(i, 1);\r\n        this.setState({\r\n            list : list\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let list = this.state.list;\r\n\r\n        const FormCSS = {\r\n            marginTop: \"100px\"\r\n        }\r\n        const labelCSS = {\r\n            color: \"white\"\r\n        }\r\n        const inputCSS = {\r\n            width: \"25vw\",\r\n\r\n        }\r\n        const backForm = {\r\n            width: \"30vw\",\r\n            height: \"40vh\"\r\n        }\r\n        const descStyle = {\r\n            width: \"50%\"\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"container\" style={FormCSS}>\r\n\r\n                <h1 className=\"text-center mt-5\">{this.state.heading}</h1>\r\n                <div className=\"container mt-5 bg-dark p-4 text-center\" style={backForm}>\r\n\r\n                    <form ref=\"myForm\">\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\" style={labelCSS}>Title</label>\r\n                            <input type=\"text\" className=\"container form-control\" id=\"title\" name=\"title\" style={inputCSS} ref=\"txtTitle\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\" style={labelCSS}>Description</label>\r\n                            <input type=\"text\" className=\"container form-control\" id=\"description\" style={inputCSS} name=\"description\" ref=\"txtDescription\" />\r\n                        </div>\r\n                        <br />\r\n                        <button type=\"submit\" className=\"btn btn-sm btn-success\" style={inputCSS} onClick={e => this.submit(e)}>Add Item</button>\r\n                    </form>\r\n                </div>\r\n\r\n\r\n                <h1 className=\"text-center mt-5 mb-5\">See your Add Items</h1>\r\n                <div className=\"container mb-5\">\r\n                    <table className=\"container table\">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th scope=\"col\">Title</th>\r\n                                <th scope=\"col\" style={descStyle}>Description</th>\r\n                                <th scope=\"col\"></th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {list.map((data, i) =>\r\n                                <tr key={i}>\r\n                                    <td>{data.title}</td>\r\n                                    <td>{data.description}</td>\r\n                                    <td><button className=\"btn btn-sm btn-danger\" onClick={i => this.delete(i)}>Delete</button></td>\r\n                                    <td><button className=\"btn btn-sm btn-success\" onClick={( ) => this.edit(i)}>Edit</button></td>\r\n                                </tr>\r\n\r\n                            )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Contact extends Component {\r\n    render() {\r\n        const FormCSS = {\r\n            marginTop: \"100px\"\r\n        }\r\n        const labelCSS = {\r\n            color: \"white\"\r\n        }\r\n        const inputCSS = {\r\n            width: \"25vw\",\r\n\r\n        }\r\n        const backForm = {\r\n            width: \"30vw\",\r\n            height: \"40vh\"\r\n        }\r\n        return (\r\n            <div className=\"container\" style={FormCSS}>\r\n\r\n                <h1 className=\"text-center mt-5\">Contact Us</h1>\r\n                <div className=\"container mt-5 bg-dark p-4 text-center\" style={backForm}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"title\" style={labelCSS}>Title</label>\r\n                        <input type=\"text\" className=\"container form-control\" id=\"title\" name=\"title\" style={inputCSS}  />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"description\" style={labelCSS}>Description</label>\r\n                        <input type=\"text\" className=\"container form-control\" id=\"description\" style={inputCSS} name=\"description\" />\r\n                    </div>\r\n                    <br />\r\n                    <button type=\"submit\" className=\"btn btn-sm btn-success\" style={inputCSS}>Submit</button>\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n","import Header from './Header'\nimport Footer from './Footer'\nimport AddForm from './Components/AddForm'\nimport Contact from './Components/Contact'\n\n\nfunction App() {\n\n  return (\n    <div>\n      <Header/>\n      <AddForm />\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}